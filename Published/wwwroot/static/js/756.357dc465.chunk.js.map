{"version":3,"file":"static/js/756.357dc465.chunk.js","mappings":"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","sources":["api/api.js","config/settings.js","views/Dashboard/bar-chart-2.js","views/Dashboard/pieChart1.js","api/dashboardApi.js","views/Dashboard/Dashboard.jsx"],"sourcesContent":["import { create } from \"apisauce\";\nimport settings from \"../config/settings\";\n\nconst api = create({ baseURL: settings.apiUrl });\n\napi.addAsyncRequestTransform(async (request) => {\n  const authToken = await localStorage[\"token\"];\n\n  if (!authToken) return;\n\n  request.headers[\"Authorization\"] = `bearer ${authToken}`;\n});\n\nexport default api;\n","const settings = {\n  dev: {\n    apiUrl: \"https://localhost:7146/api\",\n  },\n  pro: {\n    apiUrl: `http://${window.location.host}/api`,\n  },\n};\n\nconst getCurrentSettings = () => {\n  if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\n    return settings.dev;\n  }\n\n  return settings.pro;\n};\n\nexport default getCurrentSettings();\n","const subtractOneYear = (date, year) => {\n  date.setFullYear(date.getFullYear() - year);\n\n  return date;\n};\n\nconst chartData = {\n  height: 350,\n  type: \"area\",\n  options: {\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"smooth\",\n    },\n    colors: [\"#FFB64D\"],\n    annotations: {\n      yaxis: [\n        {\n          y: 30,\n          borderColor: \"#999\",\n          label: {\n            show: true,\n            text: \"Support\",\n            style: {\n              color: \"#fff\",\n              background: \"#00E396\",\n            },\n          },\n        },\n      ],\n    },\n    markers: {\n      size: 0,\n      style: \"hollow\",\n    },\n    xaxis: {\n      type: \"datetime\",\n      min: new Date(\n        subtractOneYear(new Date(), 1).toLocaleDateString()\n      ).getTime(),\n      tickAmount: 6,\n    },\n    tooltip: {\n      x: {\n        format: \"dd MMM yyyy\",\n      },\n    },\n  },\n};\n\nexport default chartData;\n","const chartData = {\n  height: 320,\n  type: \"pie\",\n  options: {\n    labels: [\"Payments\", \"Bills\", \"Expenses\"],\n    colors: [\"#0e9e4a\", \"#00bcd4\", \"#FF5370\", \"#FFB64D\"],\n    legend: {\n      show: true,\n      position: \"bottom\",\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shade: \"light\",\n        inverseColors: true,\n      },\n    },\n    dataLabels: {\n      enabled: true,\n      dropShadow: {\n        enabled: false,\n      },\n    },\n    responsive: [\n      {\n        breakpoint: 480,\n        options: {\n          legend: {\n            position: \"bottom\",\n          },\n        },\n      },\n    ],\n  },\n};\nexport default chartData;\n","import api from \"./api\";\n\nconst endPoint = \"/dashboardes\";\n\nconst getAll = () => api.get(endPoint);\n\nexport default { getAll };\n","import { useEffect, useState } from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\n\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Chart from \"react-apexcharts\";\n\nimport shape3 from \"../../assets/images/shape3.png\";\nimport pieChart2 from \"./bar-chart-2\";\nimport pieChart1 from \"./pieChart1\";\n\nimport dashboardApi from \"../../api/dashboardApi\";\n\nconst Dashboard = () => {\n  const [data, setDate] = useState({\n    totalBills: 0,\n    totalReceipts: 0,\n    totalExpenses: 0,\n    totalContracts: \"\",\n    bills: [],\n    receipts: [],\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleLoad = async () => {\n    setIsLoading(true);\n    const { status, data } = await dashboardApi.getAll();\n    setIsLoading(false);\n\n    if (status !== 200) return toast.error(\"Network Error\");\n\n    setDate(data);\n  };\n  const formatNumber = (inputNumber) => {\n    let formetedNumber = Number(inputNumber)\n      .toFixed(2)\n      .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n    let splitArray = formetedNumber.split(\".\");\n    if (splitArray.length > 1) {\n      formetedNumber = splitArray[0];\n    }\n    return formetedNumber;\n  };\n\n  useEffect(() => {\n    handleLoad();\n  }, []);\n\n  return (\n    <>\n      <Row>\n        <Col md={6} xl={4}>\n          <Card className=\"theme-bg bitcoin-wallet\">\n            <Card.Body>\n              <h5 className=\"text-white mb-2\">Bills</h5>\n              <h2 className=\"text-white mb-3 f-w-300\">\n                {isLoading ? (\n                  <ClipLoader\n                    color=\"#fff\"\n                    size={40}\n                    aria-label=\"Loading Spinner\"\n                    data-testid=\"loader\"\n                  />\n                ) : (\n                  formatNumber(data.totalBills)\n                )}\n              </h2>\n              <span className=\"text-white d-block\">Total Bills this Month</span>\n              <i className=\"fas fa-file-invoice-dollar f-70 text-white\"></i>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={6} xl={4}>\n          <Card className=\"theme-bg2 bitcoin-wallet\">\n            <Card.Body>\n              <h5 className=\"text-white mb-2\">Collected Bill</h5>\n              <h2 className=\"text-white mb-3 f-w-300\">\n                {isLoading ? (\n                  <ClipLoader\n                    color=\"#fff\"\n                    size={40}\n                    aria-label=\"Loading Spinner\"\n                    data-testid=\"loader\"\n                  />\n                ) : (\n                  formatNumber(data.totalReceipts)\n                )}\n              </h2>\n              <span className=\"text-white d-block\">\n                Total Collected Bill this Year\n              </span>\n              <i className=\"fas fa-receipt f-70 text-white\" />\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={12} xl={4}>\n          <Card className=\"bg-c-blue bitcoin-wallet\">\n            <Card.Body>\n              <h5 className=\"text-white mb-2\">Expenses</h5>\n              <h2 className=\"text-white mb-3 f-w-300\">\n                {isLoading ? (\n                  <ClipLoader\n                    color=\"#fff\"\n                    size={40}\n                    aria-label=\"Loading Spinner\"\n                    data-testid=\"loader\"\n                  />\n                ) : (\n                  formatNumber(data.totalExpenses)\n                )}\n              </h2>\n              <span className=\"text-white d-block\">\n                Total Expenses this Year\n              </span>\n              <i className=\"fas fa-money-bill-wave f-70 text-white\" />\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col xl={8}>\n          <Card>\n            <Card.Body className=\"border-bottom\">\n              <h4>Collected Bills This Year</h4>\n              <Chart\n                {...pieChart2}\n                series={[\n                  {\n                    name: \"Collected Bills\",\n                    data: data.receipts.map((b) => {\n                      b.x = new Date(b.x).getTime();\n\n                      return [b.x, b.y];\n                    }),\n                  },\n                ]}\n              />\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xl={4}>\n          <Row>\n            <Col xl={12} lg={12} sm={12} xs={12}>\n              <Card>\n                <Card.Body>\n                  <div className=\"row align-items-center justify-content-center\">\n                    <div className=\"col\">\n                      <h3 className=\"text-c-green\">\n                        {isLoading ? (\n                          <ClipLoader\n                            size={40}\n                            color=\"#8c9bd4\"\n                            data-testid=\"loader\"\n                            aria-label=\"Loading Spinner\"\n                          />\n                        ) : (\n                          `00${formatNumber(data.totalContracts)}`\n                        )}\n                      </h3>\n                      <h5>Active Contracts</h5>\n                    </div>\n                    <div className=\"col text-right\">\n                      <img\n                        src={shape3}\n                        style={{ width: \"80px\" }}\n                        alt=\"activity-user\"\n                      />\n                    </div>\n                  </div>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col xl={12} lg={12} sm={12} xs={12}>\n              <Card>\n                <Card.Body>\n                  <h5>Cash Movement This Year</h5>\n                  {isLoading ? (\n                    <ClipLoader\n                      size={40}\n                      color=\"#8c9bd4\"\n                      data-testid=\"loader\"\n                      aria-label=\"Loading Spinner\"\n                    />\n                  ) : (\n                    <Chart\n                      {...pieChart1}\n                      series={[\n                        data.totalReceipts,\n                        data.totalBills,\n                        data.totalExpenses,\n                      ]}\n                    />\n                  )}\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"names":["api","create","baseURL","settings","apiUrl","addAsyncRequestTransform","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","authToken","wrap","_context","prev","next","localStorage","sent","abrupt","headers","concat","stop","_x","apply","arguments","dev","pro","window","location","host","date","year","height","type","options","dataLabels","enabled","stroke","curve","colors","annotations","yaxis","y","borderColor","label","show","text","style","color","background","markers","size","xaxis","min","Date","setFullYear","getFullYear","toLocaleDateString","getTime","tickAmount","tooltip","x","format","labels","legend","position","fill","gradient","shade","inverseColors","dropShadow","responsive","breakpoint","get","_useState","useState","totalBills","totalReceipts","totalExpenses","totalContracts","bills","receipts","_useState2","_slicedToArray","data","setDate","_useState3","_useState4","isLoading","setIsLoading","handleLoad","_yield$dashboardApi$g","status","dashboardApi","toast","error","formatNumber","inputNumber","formetedNumber","Number","toFixed","replace","splitArray","split","length","useEffect","_jsxs","_Fragment","children","Row","_jsx","Col","md","xl","Card","className","Body","ClipLoader","Chart","_objectSpread","pieChart2","series","name","map","b","lg","sm","xs","src","width","alt","pieChart1"],"sourceRoot":""}