{"version":3,"file":"static/js/127.4ca04e7d.chunk.js","mappings":"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","sources":["config/settings.js","services/HttpServices.js","views/Message/ViewMessage.jsx","views/Message/Messages.jsx"],"sourcesContent":["const settings = {\n  dev: {\n    apiUrl: \"https://localhost:7146/api\",\n  },\n  pro: {\n    apiUrl: `http://${window.location.host}/api`,\n  },\n};\n\nconst getCurrentSettings = () => {\n  if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\n    return settings.dev;\n  }\n\n  return settings.pro;\n};\n\nexport default getCurrentSettings();\n","import Axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nAxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    console.log(error);\n    toast.error(\"Unexpected error occur\");\n  }\n\n  return Promise.reject(error);\n});\n\nconst CRUD = {\n  post: Axios.post,\n  put: Axios.put,\n  get: Axios.get,\n};\n\nexport default CRUD;\n","import React from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nconst ViewMessage = ({ show, setShow, message }) => {\n  return (\n    <Modal show={show}>\n      <Modal.Header>\n        <Modal.Title>Message body of {message.name}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <textarea\n          disabled\n          rows={10}\n          value={message.body}\n          className=\"form-control\"\n        />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button className=\"btn-secondary\" onClick={() => setShow(false)}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ViewMessage;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\n\nimport Config from \"../../config/settings\";\nimport Services from \"../../services/HttpServices\";\nimport { toast } from \"react-toastify\";\nimport { MDBDataTableV5 } from \"mdbreact\";\nimport Fontawesome from \"react-fontawesome\";\nimport ViewMessage from \"./ViewMessage\";\n\nconst Messages = () => {\n  const [messages, setMessages] = useState([]);\n  const [show, setShow] = useState(false);\n  const [message, setMessage] = useState({});\n  const [tableHeaders] = useState([\n    { label: \"Name\", field: \"name\" },\n    { label: \"Tellphone\", field: \"tellphone\" },\n    { label: \"Message\", field: \"messageBody\" },\n    { label: \"Date\", field: \"date\" },\n    { label: \"\", field: \"edit\" },\n  ]);\n\n  useEffect(() => {\n    const auth = { Authorization: `bearer ${localStorage[\"token\"]}` };\n\n    Services.get(Config.apiUrl + \"/messages\", { headers: auth })\n      .then(({ data }) => {\n        setMessages(data);\n      })\n      .catch((error) => {\n        console.log(error);\n\n        toast.error(\"Something went wrong\");\n      });\n  }, []);\n\n  const handleSummary = (text) => {\n    const max = 20;\n    const letters = text.split(\"\");\n\n    if (letters.length > max) {\n      return letters.slice(0, max).join(\"\") + \"...\";\n    } else {\n      return letters.join(\"\");\n    }\n  };\n\n  return (\n    <>\n      <ViewMessage show={show} setShow={setShow} message={message} />\n      <Card>\n        <Card.Header>\n          <Card.Title>Messages</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <MDBDataTableV5\n            hover\n            entriesOptions={[10, 25, 50, 100, 250, 500, 1000]}\n            entries={10}\n            pagesAmount={10}\n            data={{\n              columns: tableHeaders,\n              rows: messages.map((message) => {\n                message.edit = (\n                  <Button\n                    className=\"btn-light btn-sm\"\n                    onClick={() => {\n                      setMessage(message);\n                      setShow(true);\n                    }}\n                  >\n                    <Fontawesome\n                      className=\"fas fa-eye text-secondary\"\n                      style={{ fontSize: 17 }}\n                      name=\"edit\"\n                    />\n                  </Button>\n                );\n\n                message.name = message.customer.name;\n                message.tellphone = message.customer.tellphone;\n                message.date = new Date(message.date).toDateString();\n                message.messageBody = handleSummary(message.body);\n\n                return message;\n              }),\n            }}\n            pagingTop\n            searchTop\n            searchBottom={false}\n            fullPagination\n          />\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default Messages;\n"],"names":["settings","dev","apiUrl","pro","concat","window","location","host","Axios","response","use","error","status","console","log","toast","Promise","reject","CRUD","post","put","get","_ref","show","setShow","message","_jsxs","Modal","children","_jsx","Header","Title","name","Body","disabled","rows","value","body","className","Footer","Button","onClick","_useState","useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","_useState5","_useState6","setMessage","_useState7","label","field","tableHeaders","useEffect","auth","Authorization","localStorage","Services","Config","headers","then","data","catch","_Fragment","ViewMessage","Card","MDBDataTableV5","hover","entriesOptions","entries","pagesAmount","columns","map","edit","Fontawesome","style","fontSize","customer","tellphone","date","Date","toDateString","messageBody","text","letters","split","length","slice","join","handleSummary","pagingTop","searchTop","searchBottom","fullPagination"],"sourceRoot":""}